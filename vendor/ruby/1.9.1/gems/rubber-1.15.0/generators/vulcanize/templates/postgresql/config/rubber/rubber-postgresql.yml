
# REQUIRED: The credentials for creating/accessing your app's database
#
db_user: "#{app_name[0,16]}"
db_pass:
db_name: "#{app_name}_#{RUBBER_ENV}"

db_slave_user: "#{('slave_' + db_user)[0,16]}"
db_replicator_user: "#{('replicator_' + db_user)[0,16]}"

# REQUIRED: The command to use to do a full backup of your database using
#           "rake rubber:backup_db"
db_backup_cmd: "nice sudo -u postgres pg_dumpall -U postgres | gzip -c > %backup_file%"

# REQUIRED: The command to use to restore the database using
#           "rake rubber:restore_db_s3"
#           This command will receive the data generated by db_backup_cmd via
#           its standard input
db_restore_cmd: "zcat - | psql -U postgres -h %host% %name%"

postgresql_ver: 9.0
postgresql_conf_dir: "/etc/postgresql/#{postgresql_ver}/main"
postgresql_data_dir: "/mnt/postgresql/#{postgresql_ver}/data"
postgresql_archive_dir: "/mnt/postgresql/#{postgresql_ver}/archive"
postgresql_pid_file: "/var/run/postgresql/#{postgresql_ver}-main.pid"
postgresql_ctl: "/usr/bin/env service postgresql"

# Capistrano needs db:primary role for migrate to work,
# so we might as well just make consistent across the board
role_dependencies:
  postgresql_master: ["db:primary=true"]
  postgresql_slave: [db]
  db:primary=true: [postgresql_master]
  db: [postgresql_slave]

packages: [postgresql-client, libpq-dev]
gems: [pg]

roles:
  postgresql_master:
    db_server_id: 1
  postgresql_slave:
    db_server_id: 2
  db:
    packages: [postgresql-9.0, libdbd-pg-perl]
